// connect to given network via MetaMask or to local testnet
var web3 = new Web3(Web3.givenProvider || new Web3.providers.WebsocketProvider("http://localhost:8546"));

// RPS contract ABI
var rpsGameContract = web3.eth.contract([{"constant":true,"inputs":[{"name":"_c1","type":"uint8"},{"name":"_c2","type":"uint8"}],"name":"win","outputs":[{"name":"w","type":"bool"}],"payable":false,"type":"function"},{"constant":false,"inputs":[],"name":"j2Timeout","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"stake","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"c2","outputs":[{"name":"","type":"uint8"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"c1Hash","outputs":[{"name":"","type":"bytes32"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_c2","type":"uint8"}],"name":"play","outputs":[],"payable":true,"type":"function"},{"constant":true,"inputs":[],"name":"j2","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"lastAction","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_c1","type":"uint8"},{"name":"_salt","type":"uint256"}],"name":"solve","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"j1","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[],"name":"j1Timeout","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"TIMEOUT","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"inputs":[{"name":"_c1Hash","type":"bytes32"},{"name":"_j2","type":"address"}],"payable":true,"type":"constructor"}]);

/*
* Use with metamask. Deploy RPS game to specified network
* @params
* selectionHash <bytes32 string>: hashed RPS commitment. keccak256(SELECTION, salt)
* opponentAddress <string>: address of opponent
* @returns
*
*/
function deployRPSGame(selectionHash, opponentAddress) {
  // contract ABI and bytecode
  var _c1Hash = selectionHash;
  var _j2 = opponentAddress ;
  // contract object
  var rpsGame = rpsGameContract.new(
     _c1Hash,
     _j2,
     {
       from: web3.eth.accounts[0],
       data: '0x606060405261012c600555604051604080610a38833981016040528080519060200190919080519060200190919050505b34600481905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160028160001916905550426006819055505b50505b61095b806100dd6000396000f300606060405236156100b8576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630c4395b9146100bd578063294914a4146101075780633a4b66f11461011c57806348e257cb146101455780634d03e3d21461017c57806353a04b05146101ad57806380985af9146101c857806389f71d531461021d578063a5ddec7c14610246578063c37597c614610275578063c8391142146102ca578063f56f48f2146102df575b600080fd5b34156100c857600080fd5b6100ed600480803560ff1690602001909190803560ff16906020019091905050610308565b604051808215151515815260200191505060405180910390f35b341561011257600080fd5b61011a6103d8565b005b341561012757600080fd5b61012f610484565b6040518082815260200191505060405180910390f35b341561015057600080fd5b61015861048a565b6040518082600581111561016857fe5b60ff16815260200191505060405180910390f35b341561018757600080fd5b61018f61049d565b60405180826000191660001916815260200191505060405180910390f35b6101c6600480803560ff169060200190919050506104a3565b005b34156101d357600080fd5b6101db610571565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561022857600080fd5b610230610597565b6040518082815260200191505060405180910390f35b341561025157600080fd5b610273600480803560ff1690602001909190803590602001909190505061059d565b005b341561028057600080fd5b610288610853565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156102d557600080fd5b6102dd610878565b005b34156102ea57600080fd5b6102f2610929565b6040518082815260200191505060405180910390f35b600081600581111561031657fe5b83600581111561032257fe5b141561033157600090506103d2565b6000600581111561033e57fe5b83600581111561034a57fe5b141561035957600090506103d2565b600282600581111561036757fe5b81151561037057fe5b06600284600581111561037f57fe5b81151561038857fe5b0614156103af5781600581111561039b57fe5b8360058111156103a757fe5b1090506103d2565b8160058111156103bb57fe5b8360058111156103c757fe5b1190506103d2565b5b5b5b92915050565b600060058111156103e557fe5b600360009054906101000a900460ff16600581111561040057fe5b14151561040c57600080fd5b600554600654014211151561042057600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f193505050505060006004819055505b565b60045481565b600360009054906101000a900460ff1681565b60025481565b600060058111156104b057fe5b600360009054906101000a900460ff1660058111156104cb57fe5b1415156104d757600080fd5b600454341415156104e757600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561054357600080fd5b80600360006101000a81548160ff0219169083600581111561056157fe5b0217905550426006819055505b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b600060058111156105aa57fe5b600360009054906101000a900460ff1660058111156105c557fe5b141515156105d257600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561062d57600080fd5b6002546000191682826040518083600581111561064657fe5b60ff167f01000000000000000000000000000000000000000000000000000000000000000281526001018281526020019250505060405180910390206000191614151561069257600080fd5b6106ab82600360009054906101000a900460ff16610308565b15610711576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004546002029081150290604051600060405180830381858888f1935050505050610846565b61072a600360009054906101000a900460ff1683610308565b1561079157600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004546002029081150290604051600060405180830381858888f1935050505050610845565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f1935050505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050505b5b60006004819055505b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600581111561088557fe5b600360009054906101000a900460ff1660058111156108a057fe5b141515156108ad57600080fd5b60055460065401421115156108c157600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004546002029081150290604051600060405180830381858888f193505050505060006004819055505b565b600554815600a165627a7a72305820a2439b31dd9788fb6695599214e78967dfa3f4220172b50f8a132e8e58a505980029',
       gas: '4300000'
     }, function (e, contract){
      console.log(e, contract);
      if (typeof contract.address !== 'undefined') {
           console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
      }
   })

  // return web3 contract object
  //  TODO promise?
  return rpsGame;
}
